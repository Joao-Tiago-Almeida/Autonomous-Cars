close all;
clear;
clc;

%% get window dimensions
% f1=figure(1);
% pos_normal = f1.Position(3:4);
% f1.WindowState = 'maximized';
% pause(0.5); % waiting for the window to expand
% pos_fullscreen = f1.Position(3:4);
% close 1

%% display images
MAP = figure('Name','MAP','NumberTitle','off');
pbaspect([1 1 1]);
I = imread('../Maps images/ist_gmaps.png');
MAP.Children.Position = [0 0 1 1];
imshow(I);
MAP.WindowStyle = 'docked';
% MAP.MenuBar = 'none';
% MAP.ToolBar = 'none';
% len = pos_normal(1) + pos_fullscreen(2)-pos_normal(2);
% MAP.Position(3:4) = [len len];
hold on;
%% set MAP scale
[MAP_info] = scale_map(size(I,1));

%% Define the roads by drawing polygons
[X,Y] = meshgrid(1:size(I, 2),1:size(I, 1));
binaryMatrix = zeros(size(I, 1), size(I, 2));
while true
    roadMarkers = drawRoads();
    binaryMatrix = binaryMatrix + inpolygon(X, Y, roadMarkers(:,1)', roadMarkers(:,2)' );
    
    if ( strcmp(input("\nIf you're done drawing this road enter 'Y', if not press 'N': ", 's'), 'Y') == 1 )
        break;
    end
end

binaryMatrix(binaryMatrix>0) = 1; %Normalizing to 1 because 2 roads may be overlapped

%% Now defining other specificities in the environment (defined in binary matrix)
% 2 is crossroads
% 3 is red light

while true
    crossWalk = drawCrosswalk();
    binaryMatrix = binaryMatrix + inpolygon(X, Y, crossWalk(:,1)', crossWalk(:,2)' );
    
    if ( strcmp(input("\nIf you're done drawing this crosswalk enter 'Y', if not press 'N': ", 's'), 'Y') == 1 )
        break;
    end
end